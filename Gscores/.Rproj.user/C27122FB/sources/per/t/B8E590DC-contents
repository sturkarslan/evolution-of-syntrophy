---
title: "Calculate G-score for Syntrophy Evolution"
output: html_notebook
---
### calculate G-score based on the https://www.nature.com/articles/nature18959#s1.

Li: length of protein-coding gene.

Ni: the number of independent nonsynonymous mutations observed in that gene across all clones.

Ltot: summed length of all protein-coding genes in the ancestral genome.

Ntot: summed total number of nonsynonymous mutations in these genes.

Ei: expected number of non-synonymous mutations for a given gene.

Ei = Ntot(Li/Ltot).

Goodness of fit score: Gi = 2Niloge(Ni/Ei).

```{r}
library('ggplot2'); library('reshape2');library(gridExtra);library(gplots)
source("~/Google Drive File Stream/My Drive/R_Scripts/extractLegend.R")
```

Load mutation data
```{r}
#DvH
mut.data.dv <- read.delim("/Volumes/omics4tb/sturkarslan/syntrophy_raw_sequences/dvh_mutations_allsamples_attributes_5152019.txt", header=T, sep="\t",)
mut.data.dv$organism <- "Desulfovibrio"
#length(mut.data.dv$variant_id) # 3873
#length(unique(mut.data.dv$variant_id)) # 304
mut.type <- melt(table(mut.data.dv$mutation))
mut.effect <- melt(table(mut.data.dv$effect))
p1 <- ggplot(mut.type, aes(factor(Var1, levels = mut.type[order(mut.type$value, decreasing = T),"Var1"]), value, fill=Var1))
p1 <- p1 + geom_bar(stat="identity")
p1 <- p1 + geom_label(aes(label=value))  
p1 <- p1 + theme(axis.text = element_blank())
p1 <- p1 + labs(x = "Mutations", y = "Count")
p1
```

```{r}
mut.effect <- melt(table(mut.data.dv$effect))
p2 <- ggplot(mut.effect, aes(factor(Var1, levels = mut.effect[order(mut.effect$value, decreasing = T),"Var1"]), value, fill=Var1))
p2 <- p2 + geom_bar(stat="identity")
p2 <- p2 + geom_label(aes(label=value))  
p2 <- p2 + theme(axis.text = element_blank())
p2 <- p2 + labs(x = "Effect", y = "Count")
p2
```

